package com.karaoke.ui;

import com.karaoke.ui.quanly.QLNguoiDungJPanel;
import com.karaoke.ui.quanly.QLDichVuJPanel;
import com.karaoke.ui.quanly.QLNhaCungCapJPanel;
import com.karaoke.ui.quanly.QLPhongJPanel;
import com.karaoke.helper.JDBCHelper;
import com.karaoke.helper.JOptionPaneHelper;
import static com.karaoke.helper.OpenJPanel.openJPanel;
import com.karaoke.helper.XuLy;
import com.karaoke.ui.quanly.QLVoucherJPanel;
import com.karaoke.ui.thongke.TKHoaDonJPanel;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.Timer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author TVD
 */
public class MainJFrame extends javax.swing.JFrame {

    int count = 0;
    int index = 0;
    String maUser;
    List<JLabel> listJLabelsMenu = new ArrayList<JLabel>();
    CardLayout cardLayout = null;

    public MainJFrame(String maUser, String hoten, boolean isAdmin) {
        setUndecorated(true);
        initComponents();
        init();
        setLocationRelativeTo(null);
        if (!isAdmin) {
            lblThietLap.setVisible(false);
            lblQuanLy.setVisible(false);
            lblThongKe.setVisible(false);
        }
        this.maUser = maUser;
        setEventJLabelsWindows();
        addJLabelsToMenu(lblTrangChinh, lblQuanLy, lblThietLap, lblThongKe, lblTroGiup, lblDangXuat, lblQLDichvu,
                lblQLNCC, lblQLSMS, lblQLNguoidung, lblQLPhong, lblQLVoucher, lblTKHoadon, lblTKKhunggio, lblTLThongtinquan, lblHDSD, lblTLThoigianmophong, lblTTTG, lblDoiMatKhau);
        cardLayout = (CardLayout) pnlLeft.getLayout();
        lblQuayLai.setVisible(false);
        loadInformation();
        String info = "<html>User: <font color = WHITE><b>" + maUser + " - " + hoten + "</b></font><br>";
        if (isAdmin) {
            info += "Vai trò: <font color = WHITE><b>Quản lý - Admin</font></b></html>";
        } else {
            info += "Vai trò: <font color = WHITE><b>Nhân viên</font></b></html>";
        }
        lblInformationNhanVien.setText(info);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/karaoke/images/icon/iconFrame.png")));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRoot = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        pnlLeft = new javax.swing.JPanel();
        pnlMenuMain = new javax.swing.JPanel();
        lblTrangChinh = new javax.swing.JLabel();
        lblQuanLy = new javax.swing.JLabel();
        lblThongKe = new javax.swing.JLabel();
        lblThietLap = new javax.swing.JLabel();
        lblTroGiup = new javax.swing.JLabel();
        lblDangXuat = new javax.swing.JLabel();
        pnlMenuQuanLy = new javax.swing.JPanel();
        lblQuanLyTitile = new javax.swing.JLabel();
        lblQLNguoidung = new javax.swing.JLabel();
        lblQLPhong = new javax.swing.JLabel();
        lblQLDichvu = new javax.swing.JLabel();
        lblQLNCC = new javax.swing.JLabel();
        lblQLVoucher = new javax.swing.JLabel();
        lblQLSMS = new javax.swing.JLabel();
        pnlMenuThongKe = new javax.swing.JPanel();
        lblThongKeTitle = new javax.swing.JLabel();
        lblTKHoadon = new javax.swing.JLabel();
        lblTKKhunggio = new javax.swing.JLabel();
        pnlMenuThietLap = new javax.swing.JPanel();
        lblThietLapTitle = new javax.swing.JLabel();
        lblTLThongtinquan = new javax.swing.JLabel();
        lblTLThoigianmophong = new javax.swing.JLabel();
        pnlMenuTroGiup = new javax.swing.JPanel();
        lblTroGiupTitle = new javax.swing.JLabel();
        lblDoiMatKhau = new javax.swing.JLabel();
        lblHDSD = new javax.swing.JLabel();
        lblTTTG = new javax.swing.JLabel();
        lblQuayLai = new javax.swing.JLabel();
        lblBackgroundMenu = new javax.swing.JLabel();
        pnlView = new javax.swing.JPanel();
        lblLogoLARGE = new javax.swing.JLabel();
        lblSlogan = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlFoot = new javax.swing.JPanel();
        lblTime = new javax.swing.JLabel();
        lblTenKara = new javax.swing.JLabel();
        lblInformationNhanVien = new javax.swing.JLabel();
        lblDiaChiKara = new javax.swing.JLabel();
        pnlTop = new javax.swing.JPanel();
        lblMinimizeWindow = new javax.swing.JLabel();
        lblCloseWindow = new javax.swing.JLabel();
        lblTitile = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KaraokeManagement - Phần mềm quản lý Phòng Hát Karaoke v1.1");
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlRoot.setMaximumSize(new java.awt.Dimension(1366, 768));
        pnlRoot.setMinimumSize(new java.awt.Dimension(1366, 768));
        pnlRoot.setOpaque(false);
        pnlRoot.setPreferredSize(new java.awt.Dimension(1366, 768));
        pnlRoot.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLogo.setBackground(new java.awt.Color(0, 0, 0));
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/logoSmall.png"))); // NOI18N
        pnlRoot.add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 250, 80));

        pnlLeft.setBackground(new java.awt.Color(255, 255, 255));
        pnlLeft.setToolTipText("");
        pnlLeft.setMaximumSize(new java.awt.Dimension(310, 640));
        pnlLeft.setMinimumSize(new java.awt.Dimension(310, 640));
        pnlLeft.setOpaque(false);
        pnlLeft.setPreferredSize(new java.awt.Dimension(310, 640));
        pnlLeft.setLayout(new java.awt.CardLayout());

        pnlMenuMain.setBackground(new java.awt.Color(0, 0, 51));
        pnlMenuMain.setForeground(new java.awt.Color(255, 255, 255));
        pnlMenuMain.setToolTipText("");
        pnlMenuMain.setMaximumSize(new java.awt.Dimension(310, 690));
        pnlMenuMain.setMinimumSize(new java.awt.Dimension(310, 690));
        pnlMenuMain.setOpaque(false);
        pnlMenuMain.setPreferredSize(new java.awt.Dimension(310, 690));
        pnlMenuMain.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 20));

        lblTrangChinh.setBackground(new java.awt.Color(0, 0, 102));
        lblTrangChinh.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTrangChinh.setForeground(new java.awt.Color(255, 255, 255));
        lblTrangChinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/microphone-9-32.png"))); // NOI18N
        lblTrangChinh.setText("PHÒNG HÁT");
        lblTrangChinh.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblTrangChinh.setIconTextGap(15);
        lblTrangChinh.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTrangChinh.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTrangChinh.setOpaque(true);
        lblTrangChinh.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblTrangChinh);

        lblQuanLy.setBackground(new java.awt.Color(0, 0, 102));
        lblQuanLy.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblQuanLy.setForeground(new java.awt.Color(255, 255, 255));
        lblQuanLy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/manager-32.png"))); // NOI18N
        lblQuanLy.setText("DANH MỤC QUẢN LÝ");
        lblQuanLy.setIconTextGap(15);
        lblQuanLy.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQuanLy.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQuanLy.setOpaque(true);
        lblQuanLy.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblQuanLy);

        lblThongKe.setBackground(new java.awt.Color(0, 0, 102));
        lblThongKe.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongKe.setForeground(new java.awt.Color(255, 255, 255));
        lblThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/statistics-32.png"))); // NOI18N
        lblThongKe.setText("BÁO CÁO THỐNG KÊ");
        lblThongKe.setIconTextGap(15);
        lblThongKe.setMaximumSize(new java.awt.Dimension(250, 50));
        lblThongKe.setMinimumSize(new java.awt.Dimension(250, 50));
        lblThongKe.setOpaque(true);
        lblThongKe.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblThongKe);

        lblThietLap.setBackground(new java.awt.Color(0, 0, 102));
        lblThietLap.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThietLap.setForeground(new java.awt.Color(255, 255, 255));
        lblThietLap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/settings-5-32.png"))); // NOI18N
        lblThietLap.setText("THIẾT LẬP");
        lblThietLap.setIconTextGap(15);
        lblThietLap.setMaximumSize(new java.awt.Dimension(250, 50));
        lblThietLap.setMinimumSize(new java.awt.Dimension(250, 50));
        lblThietLap.setOpaque(true);
        lblThietLap.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblThietLap);

        lblTroGiup.setBackground(new java.awt.Color(0, 0, 102));
        lblTroGiup.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTroGiup.setForeground(new java.awt.Color(255, 255, 255));
        lblTroGiup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/help-32.png"))); // NOI18N
        lblTroGiup.setText("TRỢ GIÚP");
        lblTroGiup.setIconTextGap(15);
        lblTroGiup.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTroGiup.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTroGiup.setOpaque(true);
        lblTroGiup.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblTroGiup);

        lblDangXuat.setBackground(new java.awt.Color(0, 0, 102));
        lblDangXuat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblDangXuat.setForeground(new java.awt.Color(255, 255, 255));
        lblDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/logout-32.png"))); // NOI18N
        lblDangXuat.setText("ĐĂNG XUẤT");
        lblDangXuat.setIconTextGap(15);
        lblDangXuat.setMaximumSize(new java.awt.Dimension(250, 50));
        lblDangXuat.setMinimumSize(new java.awt.Dimension(250, 50));
        lblDangXuat.setOpaque(true);
        lblDangXuat.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuMain.add(lblDangXuat);

        pnlLeft.add(pnlMenuMain, "main");

        pnlMenuQuanLy.setBackground(new java.awt.Color(0, 0, 51));
        pnlMenuQuanLy.setForeground(new java.awt.Color(255, 255, 255));
        pnlMenuQuanLy.setToolTipText("");
        pnlMenuQuanLy.setMaximumSize(new java.awt.Dimension(310, 690));
        pnlMenuQuanLy.setMinimumSize(new java.awt.Dimension(310, 690));
        pnlMenuQuanLy.setOpaque(false);
        pnlMenuQuanLy.setPreferredSize(new java.awt.Dimension(310, 690));
        pnlMenuQuanLy.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20));

        lblQuanLyTitile.setBackground(java.awt.Color.red);
        lblQuanLyTitile.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblQuanLyTitile.setForeground(new java.awt.Color(255, 255, 255));
        lblQuanLyTitile.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblQuanLyTitile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/manager-32.png"))); // NOI18N
        lblQuanLyTitile.setText("DANH MỤC QUẢN LÝ");
        lblQuanLyTitile.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        lblQuanLyTitile.setIconTextGap(15);
        lblQuanLyTitile.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQuanLyTitile.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQuanLyTitile.setOpaque(true);
        lblQuanLyTitile.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuQuanLy.add(lblQuanLyTitile);

        lblQLNguoidung.setBackground(new java.awt.Color(0, 0, 51));
        lblQLNguoidung.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLNguoidung.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNguoidung.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLNguoidung.setText("QUẢN LÝ NGƯỜI DÙNG");
        lblQLNguoidung.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLNguoidung.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLNguoidung.setOpaque(true);
        lblQLNguoidung.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLNguoidung.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLNguoidungMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLNguoidung);

        lblQLPhong.setBackground(new java.awt.Color(0, 0, 51));
        lblQLPhong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLPhong.setForeground(new java.awt.Color(255, 255, 255));
        lblQLPhong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLPhong.setText("QUẢN LÝ PHÒNG");
        lblQLPhong.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLPhong.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLPhong.setOpaque(true);
        lblQLPhong.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLPhongMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLPhong);

        lblQLDichvu.setBackground(new java.awt.Color(0, 0, 51));
        lblQLDichvu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLDichvu.setForeground(new java.awt.Color(255, 255, 255));
        lblQLDichvu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLDichvu.setText("QUẢN LÝ DỊCH VỤ");
        lblQLDichvu.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLDichvu.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLDichvu.setOpaque(true);
        lblQLDichvu.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLDichvu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLDichvuMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLDichvu);

        lblQLNCC.setBackground(new java.awt.Color(0, 0, 51));
        lblQLNCC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLNCC.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNCC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLNCC.setText("QUẢN LÝ NHÀ CUNG CẤP");
        lblQLNCC.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLNCC.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLNCC.setOpaque(true);
        lblQLNCC.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLNCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLNCCMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLNCC);

        lblQLVoucher.setBackground(new java.awt.Color(0, 0, 51));
        lblQLVoucher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLVoucher.setForeground(new java.awt.Color(255, 255, 255));
        lblQLVoucher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLVoucher.setText("QUẢN LÝ VOUCHER");
        lblQLVoucher.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLVoucher.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLVoucher.setOpaque(true);
        lblQLVoucher.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLVoucher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLVoucherMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLVoucher);

        lblQLSMS.setBackground(new java.awt.Color(0, 0, 51));
        lblQLSMS.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQLSMS.setForeground(new java.awt.Color(255, 255, 255));
        lblQLSMS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLSMS.setText("SMS MARKETING");
        lblQLSMS.setMaximumSize(new java.awt.Dimension(250, 50));
        lblQLSMS.setMinimumSize(new java.awt.Dimension(250, 50));
        lblQLSMS.setOpaque(true);
        lblQLSMS.setPreferredSize(new java.awt.Dimension(250, 50));
        lblQLSMS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQLSMSMouseClicked(evt);
            }
        });
        pnlMenuQuanLy.add(lblQLSMS);

        pnlLeft.add(pnlMenuQuanLy, "quanly");

        pnlMenuThongKe.setBackground(new java.awt.Color(0, 0, 51));
        pnlMenuThongKe.setForeground(new java.awt.Color(255, 255, 255));
        pnlMenuThongKe.setToolTipText("");
        pnlMenuThongKe.setMaximumSize(new java.awt.Dimension(310, 690));
        pnlMenuThongKe.setMinimumSize(new java.awt.Dimension(310, 690));
        pnlMenuThongKe.setOpaque(false);
        pnlMenuThongKe.setPreferredSize(new java.awt.Dimension(310, 690));
        pnlMenuThongKe.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20));

        lblThongKeTitle.setBackground(java.awt.Color.red);
        lblThongKeTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongKeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblThongKeTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblThongKeTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/statistics-32.png"))); // NOI18N
        lblThongKeTitle.setText("BÁO CÁO THỐNG KÊ");
        lblThongKeTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        lblThongKeTitle.setIconTextGap(15);
        lblThongKeTitle.setMaximumSize(new java.awt.Dimension(250, 50));
        lblThongKeTitle.setMinimumSize(new java.awt.Dimension(250, 50));
        lblThongKeTitle.setOpaque(true);
        lblThongKeTitle.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuThongKe.add(lblThongKeTitle);

        lblTKHoadon.setBackground(new java.awt.Color(0, 0, 51));
        lblTKHoadon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTKHoadon.setForeground(new java.awt.Color(255, 255, 255));
        lblTKHoadon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTKHoadon.setText("THỐNG KÊ HÓA ĐƠN");
        lblTKHoadon.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTKHoadon.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTKHoadon.setOpaque(true);
        lblTKHoadon.setPreferredSize(new java.awt.Dimension(250, 50));
        lblTKHoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTKHoadonMouseClicked(evt);
            }
        });
        pnlMenuThongKe.add(lblTKHoadon);

        lblTKKhunggio.setBackground(new java.awt.Color(0, 0, 51));
        lblTKKhunggio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTKKhunggio.setForeground(new java.awt.Color(255, 255, 255));
        lblTKKhunggio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTKKhunggio.setText("THỐNG KÊ KHUNG GIỜ");
        lblTKKhunggio.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTKKhunggio.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTKKhunggio.setOpaque(true);
        lblTKKhunggio.setPreferredSize(new java.awt.Dimension(250, 50));
        lblTKKhunggio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTKKhunggioMouseClicked(evt);
            }
        });
        pnlMenuThongKe.add(lblTKKhunggio);

        pnlLeft.add(pnlMenuThongKe, "thongke");

        pnlMenuThietLap.setBackground(new java.awt.Color(0, 0, 51));
        pnlMenuThietLap.setForeground(new java.awt.Color(255, 255, 255));
        pnlMenuThietLap.setToolTipText("");
        pnlMenuThietLap.setMaximumSize(new java.awt.Dimension(310, 690));
        pnlMenuThietLap.setMinimumSize(new java.awt.Dimension(310, 690));
        pnlMenuThietLap.setOpaque(false);
        pnlMenuThietLap.setPreferredSize(new java.awt.Dimension(310, 690));
        pnlMenuThietLap.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20));

        lblThietLapTitle.setBackground(java.awt.Color.red);
        lblThietLapTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThietLapTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblThietLapTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblThietLapTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/settings-5-32.png"))); // NOI18N
        lblThietLapTitle.setText("THIẾT LẬP");
        lblThietLapTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        lblThietLapTitle.setIconTextGap(15);
        lblThietLapTitle.setMaximumSize(new java.awt.Dimension(250, 50));
        lblThietLapTitle.setMinimumSize(new java.awt.Dimension(250, 50));
        lblThietLapTitle.setOpaque(true);
        lblThietLapTitle.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuThietLap.add(lblThietLapTitle);

        lblTLThongtinquan.setBackground(new java.awt.Color(0, 0, 51));
        lblTLThongtinquan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTLThongtinquan.setForeground(new java.awt.Color(255, 255, 255));
        lblTLThongtinquan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTLThongtinquan.setText("THIẾT LẬP THÔNG TIN QUÁN");
        lblTLThongtinquan.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTLThongtinquan.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTLThongtinquan.setOpaque(true);
        lblTLThongtinquan.setPreferredSize(new java.awt.Dimension(250, 50));
        lblTLThongtinquan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTLThongtinquanMouseClicked(evt);
            }
        });
        pnlMenuThietLap.add(lblTLThongtinquan);

        lblTLThoigianmophong.setBackground(new java.awt.Color(0, 0, 51));
        lblTLThoigianmophong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTLThoigianmophong.setForeground(new java.awt.Color(255, 255, 255));
        lblTLThoigianmophong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTLThoigianmophong.setText("THIẾT LẬP THỜI GIAN MỞ PHÒNG");
        lblTLThoigianmophong.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTLThoigianmophong.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTLThoigianmophong.setOpaque(true);
        lblTLThoigianmophong.setPreferredSize(new java.awt.Dimension(250, 50));
        lblTLThoigianmophong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTLThoigianmophongMouseClicked(evt);
            }
        });
        pnlMenuThietLap.add(lblTLThoigianmophong);

        pnlLeft.add(pnlMenuThietLap, "thietlap");

        pnlMenuTroGiup.setBackground(new java.awt.Color(0, 0, 51));
        pnlMenuTroGiup.setForeground(new java.awt.Color(255, 255, 255));
        pnlMenuTroGiup.setToolTipText("");
        pnlMenuTroGiup.setMaximumSize(new java.awt.Dimension(310, 690));
        pnlMenuTroGiup.setMinimumSize(new java.awt.Dimension(310, 690));
        pnlMenuTroGiup.setOpaque(false);
        pnlMenuTroGiup.setPreferredSize(new java.awt.Dimension(310, 690));
        pnlMenuTroGiup.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 20));

        lblTroGiupTitle.setBackground(java.awt.Color.red);
        lblTroGiupTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTroGiupTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTroGiupTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTroGiupTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/help-32.png"))); // NOI18N
        lblTroGiupTitle.setText("TRỢ GIÚP");
        lblTroGiupTitle.setIconTextGap(15);
        lblTroGiupTitle.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTroGiupTitle.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTroGiupTitle.setOpaque(true);
        lblTroGiupTitle.setPreferredSize(new java.awt.Dimension(250, 50));
        pnlMenuTroGiup.add(lblTroGiupTitle);

        lblDoiMatKhau.setBackground(new java.awt.Color(0, 0, 51));
        lblDoiMatKhau.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDoiMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        lblDoiMatKhau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoiMatKhau.setText("ĐỔI MẬT KHẨU");
        lblDoiMatKhau.setMaximumSize(new java.awt.Dimension(250, 50));
        lblDoiMatKhau.setMinimumSize(new java.awt.Dimension(250, 50));
        lblDoiMatKhau.setOpaque(true);
        lblDoiMatKhau.setPreferredSize(new java.awt.Dimension(250, 50));
        lblDoiMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDoiMatKhauMouseClicked(evt);
            }
        });
        pnlMenuTroGiup.add(lblDoiMatKhau);

        lblHDSD.setBackground(new java.awt.Color(0, 0, 51));
        lblHDSD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblHDSD.setForeground(new java.awt.Color(255, 255, 255));
        lblHDSD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHDSD.setText("HƯỚNG DẪN SỬ DỤNG");
        lblHDSD.setMaximumSize(new java.awt.Dimension(250, 50));
        lblHDSD.setMinimumSize(new java.awt.Dimension(250, 50));
        lblHDSD.setOpaque(true);
        lblHDSD.setPreferredSize(new java.awt.Dimension(250, 50));
        lblHDSD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHDSDMouseClicked(evt);
            }
        });
        pnlMenuTroGiup.add(lblHDSD);

        lblTTTG.setBackground(new java.awt.Color(0, 0, 51));
        lblTTTG.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTTTG.setForeground(new java.awt.Color(255, 255, 255));
        lblTTTG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTTTG.setText("THÔNG TIN TÁC GIẢ");
        lblTTTG.setMaximumSize(new java.awt.Dimension(250, 50));
        lblTTTG.setMinimumSize(new java.awt.Dimension(250, 50));
        lblTTTG.setOpaque(true);
        lblTTTG.setPreferredSize(new java.awt.Dimension(250, 50));
        lblTTTG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTTTGMouseClicked(evt);
            }
        });
        pnlMenuTroGiup.add(lblTTTG);

        pnlLeft.add(pnlMenuTroGiup, "trogiup");

        pnlRoot.add(pnlLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, -1, 490));

        lblQuayLai.setBackground(new java.awt.Color(0, 0, 0));
        lblQuayLai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQuayLai.setForeground(new java.awt.Color(255, 255, 0));
        lblQuayLai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQuayLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/icons8_Go_Back_32px.png"))); // NOI18N
        lblQuayLai.setText("QUAY LẠI");
        lblQuayLai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblQuayLai.setOpaque(true);
        lblQuayLai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQuayLaiMouseClicked(evt);
            }
        });
        pnlRoot.add(lblQuayLai, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 640, 250, 30));

        lblBackgroundMenu.setBackground(new java.awt.Color(0, 0, 0));
        lblBackgroundMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/background.png"))); // NOI18N
        lblBackgroundMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblBackgroundMenu.setOpaque(true);
        pnlRoot.add(lblBackgroundMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 690));

        pnlView.setBackground(new java.awt.Color(204, 204, 255));
        pnlView.setMaximumSize(new java.awt.Dimension(1050, 690));
        pnlView.setMinimumSize(new java.awt.Dimension(1050, 690));
        pnlView.setOpaque(false);
        pnlView.setPreferredSize(new java.awt.Dimension(1050, 690));
        pnlView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLogoLARGE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoLARGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/Karaoke_LogoLARGE.png"))); // NOI18N
        pnlView.add(lblLogoLARGE, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1060, 330));

        lblSlogan.setBackground(new java.awt.Color(255, 255, 255));
        lblSlogan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSlogan.setForeground(new java.awt.Color(255, 255, 255));
        lblSlogan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlogan.setText("PHẦN MỀM QUẢN LÝ PHÒNG HÁT KARAOKE CHUYÊN NGHIỆP");
        pnlView.add(lblSlogan, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 410, 1050, 30));

        pnlRoot.add(pnlView, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 1060, 690));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/background_room.jpg"))); // NOI18N
        jLabel1.setOpaque(true);
        pnlRoot.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, -1, 690));

        pnlFoot.setBackground(new java.awt.Color(30, 30, 30));
        pnlFoot.setPreferredSize(new java.awt.Dimension(1366, 700));
        pnlFoot.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTime.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 255));
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        lblTime.setMaximumSize(new java.awt.Dimension(270, 60));
        lblTime.setMinimumSize(new java.awt.Dimension(270, 60));
        lblTime.setPreferredSize(new java.awt.Dimension(270, 60));
        pnlFoot.add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, -10, 230, 70));

        lblTenKara.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblTenKara.setForeground(new java.awt.Color(255, 255, 0));
        lblTenKara.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenKara.setText("KARAOKE TÌNH THƠ");
        lblTenKara.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlFoot.add(lblTenKara, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 30));

        lblInformationNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lblInformationNhanVien.setForeground(new java.awt.Color(0, 102, 153));
        lblInformationNhanVien.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInformationNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/user.png"))); // NOI18N
        lblInformationNhanVien.setText("<html>Tên người dùng: <font color = WHITE><b> KASIM HOÀNG VŨ </b></font><br>Vai trò: <font color = WHITE><b>Admin </font></b></html>");
        lblInformationNhanVien.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        lblInformationNhanVien.setMaximumSize(new java.awt.Dimension(270, 60));
        lblInformationNhanVien.setMinimumSize(new java.awt.Dimension(270, 60));
        lblInformationNhanVien.setPreferredSize(new java.awt.Dimension(270, 60));
        pnlFoot.add(lblInformationNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 50));

        lblDiaChiKara.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDiaChiKara.setForeground(new java.awt.Color(255, 255, 255));
        lblDiaChiKara.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDiaChiKara.setText("391A Nam Kỳ Khởi Nghĩa, P.14, Q.3, TP. Hồ Chí Minh - ĐT: 028 2821 2822");
        lblDiaChiKara.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        pnlFoot.add(lblDiaChiKara, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1370, 20));

        pnlRoot.add(pnlFoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, -1, 50));

        getContentPane().add(pnlRoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 28, -1, 740));

        pnlTop.setBackground(new java.awt.Color(0, 0, 0));
        pnlTop.setMaximumSize(new java.awt.Dimension(1366, 30));
        pnlTop.setMinimumSize(new java.awt.Dimension(1366, 30));
        pnlTop.setPreferredSize(new java.awt.Dimension(1366, 30));
        pnlTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMinimizeWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/minimize_window.png"))); // NOI18N
        lblMinimizeWindow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlTop.add(lblMinimizeWindow, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 0, 30, 20));

        lblCloseWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/close_window.png"))); // NOI18N
        lblCloseWindow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlTop.add(lblCloseWindow, new org.netbeans.lib.awtextra.AbsoluteConstraints(1335, 0, 30, 20));

        lblTitile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitile.setForeground(new java.awt.Color(255, 255, 255));
        lblTitile.setText("<html><font color = YELLOW>KARAOKE MANAGEMENT v1.1</font> - Phần mềm Quản Lý Phòng Hát Karaoke");
        pnlTop.add(lblTitile, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 4, 1300, 20));

        getContentPane().add(pnlTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblQuayLaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQuayLaiMouseClicked
        // TODO add your handling code here:
        cardLayout.show(pnlLeft, "main");
        lblQuayLai.setVisible(false);
        openJPanel(pnlView, new ViewHomeJPanel());
    }//GEN-LAST:event_lblQuayLaiMouseClicked

    private void lblTTTGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTTTGMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblTTTGMouseClicked

    private void lblHDSDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHDSDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblHDSDMouseClicked

    private void lblTKKhunggioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTKKhunggioMouseClicked
        // TODO add your handling code here:
        int luotKhach[] = new int[24];
        String khungGio[] = new String[24];
        for (int i = 0; i < khungGio.length; i++) {
            khungGio[i] = i + "h";
        }
        try {
            // TODO add your handling code here:

            int i = 0;
            ResultSet rs = JDBCHelper.executeQuery("SELECT * FROM LuotKhach");
            while (rs.next()) {
                luotKhach[i] = rs.getInt(1);
                i++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }

        //Tạo frame chứa biểu đồ 
        ChartPanel chartPanel = new ChartPanel(createLineChart(luotKhach, khungGio));
        chartPanel.setPreferredSize(new java.awt.Dimension(1040, 680));
        JPanel pnlChart = new JPanel();
        pnlChart.setBackground(Color.BLACK);
        pnlChart.add(chartPanel);
        pnlChart.setSize(1050, 690);

        pnlChart.setVisible(true);
        openJPanel(pnlView, pnlChart);
    }//GEN-LAST:event_lblTKKhunggioMouseClicked

    private void lblTKHoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTKHoadonMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new TKHoaDonJPanel());
    }//GEN-LAST:event_lblTKHoadonMouseClicked

    private void lblQLSMSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLSMSMouseClicked
        // TODO add your handling code here:
        //openJPanel(pnlView, new QLSMSJPanel());
    }//GEN-LAST:event_lblQLSMSMouseClicked

    private void lblQLNCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLNCCMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new QLNhaCungCapJPanel());
    }//GEN-LAST:event_lblQLNCCMouseClicked

    private void lblQLDichvuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLDichvuMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new QLDichVuJPanel(maUser));
    }//GEN-LAST:event_lblQLDichvuMouseClicked

    private void lblQLPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLPhongMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new QLPhongJPanel());
    }//GEN-LAST:event_lblQLPhongMouseClicked

    private void lblQLNguoidungMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLNguoidungMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new QLNguoiDungJPanel());
    }//GEN-LAST:event_lblQLNguoidungMouseClicked

    private void lblDoiMatKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDoiMatKhauMouseClicked
        // TODO add your handling code here:
        doiMatKhau();

    }//GEN-LAST:event_lblDoiMatKhauMouseClicked

    private void lblTLThoigianmophongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTLThoigianmophongMouseClicked
        // TODO add your handling code here:
        boolean check = true;
        JSpinner phutMacDinh = new JSpinner(new SpinnerNumberModel(0, 0, 60, 1));
        phutMacDinh.setPreferredSize(new Dimension(300, 30));
        phutMacDinh.setFont(new java.awt.Font("Segoe UI", 1, 14));
        JSpinner phutHuyPhong = new JSpinner(new SpinnerNumberModel(0, 0, 60, 1));
        phutHuyPhong.setPreferredSize(new Dimension(300, 30));
        phutHuyPhong.setFont(new java.awt.Font("Segoe UI", 1, 14));
        Object[] message = {
            XuLy.msg("Số phút mặc định mỗi khi đặt phòng:"), phutMacDinh,
            XuLy.msg("Thời lượng cho phép hủy phòng:"), phutHuyPhong,};
        ResultSet rs = JDBCHelper.executeQuery("SELECT * FROM dbo.Information");
        try {
            if (rs.next()) {
                phutMacDinh.setValue(rs.getInt("phutMacDinh"));
                phutHuyPhong.setValue(rs.getInt("phutHuyPhong"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        do {
            int option = JOptionPane.showConfirmDialog(rootPane, message, "THIẾT LẬP ĐẶT PHÒNG", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {

                try {
                    if (!JDBCHelper.executeQuery("SELECT * FROM Information").next()) {
                        JDBCHelper.executeUpdate("INSERT INTO dbo.Information VALUES(?,?,?,?,?,?)", "", "", "", phutMacDinh.getValue() + "", phutHuyPhong.getValue() + "", "");

                    } else {
                        JDBCHelper.executeUpdate("UPDATE dbo.Information SET phutMacDinh = ?, phutHuyPhong = ?", phutMacDinh.getValue() + "", phutHuyPhong.getValue() + "");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                check = false;
                break;
            }
        } while (!check);
        if (check) {
            JOptionPane.showMessageDialog(this, XuLy.msg("Đã cập nhật thông tin"), "THÔNG TIN QUÁN", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_lblTLThoigianmophongMouseClicked

    private void lblTLThongtinquanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTLThongtinquanMouseClicked
        // TODO add your handling code here:
        lblTLThongtinquan.setForeground(Color.WHITE);
        lblTLThongtinquan.setBackground(Color.RED);
        boolean check = true;
        JTextField tenKara = new JTextField();
        tenKara.setPreferredSize(new Dimension(300, 30));
        JTextField diaChi = new JTextField();
        diaChi.setPreferredSize(new Dimension(300, 30));
        JTextField sdt = new JTextField();
        sdt.setPreferredSize(new Dimension(300, 30));
        JTextField url = new JTextField();
        url.setPreferredSize(new Dimension(300, 30));

        tenKara.setFont(new java.awt.Font("Segoe UI", 1, 14));
        diaChi.setFont(new java.awt.Font("Segoe UI", 1, 14));
        sdt.setFont(new java.awt.Font("Segoe UI", 1, 14));
        url.setFont(new java.awt.Font("Segoe UI", 1, 14));

        Object[] message = {
            XuLy.msg("Tên Quán:"), tenKara,
            XuLy.msg("Địa chỉ:"), diaChi,
            XuLy.msg("Điện thoại:"), sdt,
            XuLy.msg("URL SMS API (myMobkit): "), url

        };
        ResultSet rs = JDBCHelper.executeQuery("SELECT * FROM dbo.Information");
        try {
            if (rs.next()) {
                tenKara.setText(rs.getString("tenKara"));
                diaChi.setText(rs.getString("diaChi"));
                sdt.setText(rs.getString("soDT"));
                url.setText(rs.getString("urlSMS"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        do {
            int option = JOptionPane.showConfirmDialog(rootPane, message, "THÔNG TIN QUÁN", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                if (tenKara.getText().equals("")) {
                    JOptionPaneHelper.popup("loi", this, "Chưa nhập Tên Kara", "LỖI");
                    check = false;
                    tenKara.requestFocus();
                } else if (diaChi.getText().equals("")) {
                    JOptionPaneHelper.popup("loi", this, "Chưa nhập Địa chỉ", "LỖI");
                    check = false;
                    diaChi.requestFocus();

                } else {
                    try {
                        if (!JDBCHelper.executeQuery("SELECT * FROM Information").next()) {
                            JDBCHelper.executeUpdate("INSERT INTO dbo.Information VALUES(?,?,?,?,?,?)", tenKara.getText(), diaChi.getText(), sdt.getText(), 0, 0, url.getText());

                        } else {
                            JDBCHelper.executeUpdate("UPDATE dbo.Information SET tenKara = ?, diaChi = ?, soDT = ?, urlSMS = ?", tenKara.getText(), diaChi.getText(), sdt.getText(), url.getText());

                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                check = false;
                break;
            }
        } while (!check);
        if (check) {
            lblTenKara.setText(tenKara.getText().trim());
            lblDiaChiKara.setText(diaChi.getText().trim() + " - " + sdt.getText().trim());
            JOptionPaneHelper.popup("ok", this, "Đã cập nhật thông tin", "THIẾT LẬP THÔNG TIN QUÁN");

        }
    }//GEN-LAST:event_lblTLThongtinquanMouseClicked

    private void lblQLVoucherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQLVoucherMouseClicked
        // TODO add your handling code here:
        openJPanel(pnlView, new QLVoucherJPanel());
    }//GEN-LAST:event_lblQLVoucherMouseClicked
    private void init() {
        new Timer(1000, new ActionListener() {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy - h:mm:ss a");

            @Override
            public void actionPerformed(ActionEvent e) {
                lblTime.setText("<html>" + format.format(new Date()).replaceAll("-", "<font color = yellow>"));

            }
        }).start();
    }

    private void addJLabelsToMenu(JLabel... lb) { //Hàm xử lý các JLabel Menu (thêm vào list --> bắt sự kiện, hiệu ứng khi rê, click chuột
        for (int i = 0; i < lb.length; i++) {
            listJLabelsMenu.add(lb[i]);
        }
        for (JLabel lbl : listJLabelsMenu) {
            lbl.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 2, Color.WHITE));
            lbl.setBackground(new Color(0, 0, 255, 50));
            lbl.setForeground(Color.WHITE);
            lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lbl.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    isJLabelActive(lbl);
                    pnlMenuMain.repaint();
                    pnlMenuMain.revalidate();
                    pnlLeft.repaint();
                    pnlLeft.revalidate();

                }

            });
        }
    }

    private void isJLabelActive(JLabel label) {
        for (JLabel lbl : listJLabelsMenu) {
            if (lbl == label) {
                lbl.setForeground(Color.WHITE);
                lbl.setBackground(Color.RED);
                String lblName = label.getText();
                switch (lblName) {
                    case "PHÒNG HÁT":
                        openJPanel(pnlView, new PhongHatJPanel(maUser));
                        break;
                    case "DANH MỤC QUẢN LÝ":
                        cardLayout.show(pnlLeft, "quanly");
                        lblQuayLai.setVisible(true);
                        break;
                    case "BÁO CÁO THỐNG KÊ":
                        cardLayout.show(pnlLeft, "thongke");
                        lblQuayLai.setVisible(true);
                        break;
                    case "THIẾT LẬP":
                        cardLayout.show(pnlLeft, "thietlap");
                        lblQuayLai.setVisible(true);
                        break;
                    case "TRỢ GIÚP":
                        cardLayout.show(pnlLeft, "trogiup");
                        lblQuayLai.setVisible(true);
                        break;
                    case "ĐĂNG XUẤT":
                        pnlMenuMain.repaint();
                        ImageIcon icon = new ImageIcon(this.getClass().getResource("/com/karaoke/images/icon/JoptionPaneQUESTION.png"));
                        String[] options = new String[2];
                        options[0] = "Đăng xuất";
                        options[1] = "Hủy";
                        int ask = JOptionPane.showOptionDialog(this, "<html><b><font color = #006699 size = 4>Bạn có chắn chắn đăng xuất?</b></font></html>", "Đăng xuất", 0, JOptionPane.QUESTION_MESSAGE, icon, options, options[0]);
                        if (ask == 0) {
                            dispose();
                            new DangNhapJPanel().setVisible(true);

                        }

                }
            } else {
                lbl.setForeground(Color.WHITE);
                lbl.setBackground(new Color(0, 0, 255, 50));
            }
        }
    }

    private void setEventJLabelsWindows() {//Hàm set Event cho JLabel Close, Minimize Window
        lblCloseWindow.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                ImageIcon icon = new ImageIcon(getClass().getResource("/com/karaoke/images/icon/JoptionPaneQUESTION.png"));
                String[] options = new String[2];
                options[0] = "Thoát";
                options[1] = "Hủy";
                int ask = JOptionPane.showOptionDialog(null, "<html><b><font color = #006699 size = 4>Bạn có chắn chắn kết thúc?</b></font></html>", "Thoát", 0, JOptionPane.QUESTION_MESSAGE, icon, options, options[0]);
                if (ask == 0) {
                    System.exit(0);
                }
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                lblCloseWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/close_window_entered.png")));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                lblCloseWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/close_window.png")));

            }
        });

        lblMinimizeWindow.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                setExtendedState(JFrame.ICONIFIED);
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                lblMinimizeWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/minimize_window_entered.png")));

            }

            @Override
            public void mouseExited(MouseEvent e) {
                lblMinimizeWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karaoke/images/icon/minimize_window.png")));

            }
        });
    }

    private void loadInformation() {
        ResultSet rs = JDBCHelper.executeQuery("SELECT * FROM dbo.Information");
        try {
            if (rs.next()) {
                lblTenKara.setText(rs.getString("tenKara"));
                lblDiaChiKara.setText(rs.getString("diaChi") + " - " + rs.getString("soDT"));
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void doiMatKhau() {
        ResultSet rs;
        boolean check = true;
        JTextField currentpwd = new JPasswordField();
        currentpwd.setPreferredSize(new Dimension(300, 30));
        JTextField newpwd = new JPasswordField();
        newpwd.setPreferredSize(new Dimension(300, 30));
        JTextField cfmpwd = new JPasswordField();
        cfmpwd.setPreferredSize(new Dimension(300, 30));
        Object[] message = {
            XuLy.msg("Mật khẩu hiện tại:"), currentpwd,
            XuLy.msg("Mật khẩu mới:"), newpwd,
            XuLy.msg("Xác nhận mật khẩu mới:"), cfmpwd
        };
        do {
            int option = JOptionPane.showConfirmDialog(null, message, "Đổi mật khẩu", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                if (currentpwd.getText().equals("")) {
                    JOptionPaneHelper.popup("loi", this, "Chưa nhập mật khẩu hiện tại", "Lỗi");
                    check = false;
                    currentpwd.requestFocus();
                } else if (newpwd.getText().equals("")) {
                    JOptionPaneHelper.popup("loi", this, "Chưa nhập mật khẩu mới", "Lỗi");
                    check = false;
                    newpwd.requestFocus();

                } else {
                    try {
                        rs = JDBCHelper.executeQuery("SELECT * FROM dbo.USERS WHERE maUser = ?", maUser);
                        if (rs.next()) {
                            if (XuLy.MD5encryption(currentpwd.getText()).equals(rs.getString("password"))) {
                                if (newpwd.getText().equals(cfmpwd.getText())) {
                                    JDBCHelper.executeUpdate("UPDATE dbo.USERS SET password = ? WHERE maUser = ?", XuLy.MD5encryption(newpwd.getText()), maUser);
                                    check = true;
                                } else {
                                    JOptionPaneHelper.popup("loi", this, "Xác nhận mật khẩu mới không khớp", "Lỗi");
                                    check = false;
                                    cfmpwd.requestFocus();
                                }

                            } else {
                                JOptionPaneHelper.popup("loi", this, "Sai mật khẩu hiện tại", "Lỗi");
                                check = false;
                            }
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                check = false;
                break;
            }
        } while (!check);
        if (check) {
            JOptionPane.showMessageDialog(this, XuLy.msg("Đổi mật khẩu thành công"), "ĐỔI MẬT KHẨU", JOptionPane.INFORMATION_MESSAGE);

        }
    }

    private DefaultCategoryDataset createDataset(int luotKhach[], String khungGio[]) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < 24; i++) {
            dataset.addValue(luotKhach[i], "Khung giờ", khungGio[i]);
        }
        return dataset;
    }

    public JFreeChart createLineChart(int luotKhach[], String khungGio[]) {
        JFreeChart lineChart = ChartFactory.createLineChart3D(
                "THỐNG KÊ LƯỢT KHÁCH THEO KHUNG GIỜ",
                "Khung giờ", "Lượt khách (lượt)", createDataset(luotKhach, khungGio),
                PlotOrientation.VERTICAL, false, false, false);
        lineChart.setBackgroundPaint(new Color(255, 153, 0));
        lineChart.getTitle().setPaint(Color.WHITE);
        CategoryPlot cp = lineChart.getCategoryPlot();
        cp.setRangeGridlinePaint(Color.BLACK);

        return lineChart;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBackgroundMenu;
    private javax.swing.JLabel lblCloseWindow;
    private javax.swing.JLabel lblDangXuat;
    private javax.swing.JLabel lblDiaChiKara;
    private javax.swing.JLabel lblDoiMatKhau;
    private javax.swing.JLabel lblHDSD;
    private javax.swing.JLabel lblInformationNhanVien;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogoLARGE;
    private javax.swing.JLabel lblMinimizeWindow;
    private javax.swing.JLabel lblQLDichvu;
    private javax.swing.JLabel lblQLNCC;
    private javax.swing.JLabel lblQLNguoidung;
    private javax.swing.JLabel lblQLPhong;
    private javax.swing.JLabel lblQLSMS;
    private javax.swing.JLabel lblQLVoucher;
    private javax.swing.JLabel lblQuanLy;
    private javax.swing.JLabel lblQuanLyTitile;
    private javax.swing.JLabel lblQuayLai;
    private javax.swing.JLabel lblSlogan;
    private javax.swing.JLabel lblTKHoadon;
    private javax.swing.JLabel lblTKKhunggio;
    private javax.swing.JLabel lblTLThoigianmophong;
    private javax.swing.JLabel lblTLThongtinquan;
    private javax.swing.JLabel lblTTTG;
    private javax.swing.JLabel lblTenKara;
    private javax.swing.JLabel lblThietLap;
    private javax.swing.JLabel lblThietLapTitle;
    private javax.swing.JLabel lblThongKe;
    private javax.swing.JLabel lblThongKeTitle;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitile;
    private javax.swing.JLabel lblTrangChinh;
    private javax.swing.JLabel lblTroGiup;
    private javax.swing.JLabel lblTroGiupTitle;
    private javax.swing.JPanel pnlFoot;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlMenuMain;
    private javax.swing.JPanel pnlMenuQuanLy;
    private javax.swing.JPanel pnlMenuThietLap;
    private javax.swing.JPanel pnlMenuThongKe;
    private javax.swing.JPanel pnlMenuTroGiup;
    private javax.swing.JPanel pnlRoot;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JPanel pnlView;
    // End of variables declaration//GEN-END:variables
}
