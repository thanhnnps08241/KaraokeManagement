package com.karaoke.ui;

//import com.karaoke.dao.UsersDAO;
import com.karaoke.helper.JDBCHelper;
import com.karaoke.helper.JDialogHelper;
import com.karaoke.helper.XuLy;
import com.karaoke.model.Users;
import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thanh
 */
public class QLNguoiDungJPanel extends javax.swing.JPanel {
    int index = 0;
    ResultSet rs = null;
    public QLNguoiDungJPanel() {
        initComponents();
        customJTable(tblDanhSach);
        

        
        //model = (DefaultTableModel) tblBang.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupGioitinh = new javax.swing.ButtonGroup();
        groupTrangthai = new javax.swing.ButtonGroup();
        scrTable = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        pnlAccount = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        pnlThongtin = new javax.swing.JPanel();
        lblHoten = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        lblDienthoai = new javax.swing.JLabel();
        txtDienThoai = new javax.swing.JTextField();
        lblNgaySinh = new javax.swing.JLabel();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        lblCMND = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        lblGioitinh = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        lblVaitro = new javax.swing.JLabel();
        cboRole = new javax.swing.JComboBox<>();
        lblTrangthai = new javax.swing.JLabel();
        rdoNghiviec = new javax.swing.JRadioButton();
        rdoActive = new javax.swing.JRadioButton();
        pnlButtons = new javax.swing.JPanel();
        lblNhapMoi = new javax.swing.JLabel();
        lblThem = new javax.swing.JLabel();
        pnlSubmenu = new javax.swing.JPanel();
        lblQLDV = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 51, 51));
        setMinimumSize(new java.awt.Dimension(1050, 690));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1050, 690));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrTable.setBorder(null);

        tblDanhSach.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Username", "Họ tên", "Ngày sinh", "Giới tính", "Điện thoại", "CMND", "Vai trò"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSach.setGridColor(new java.awt.Color(255, 255, 255));
        tblDanhSach.setOpaque(false);
        tblDanhSach.setRowHeight(50);
        tblDanhSach.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tblDanhSach.setSelectionForeground(new java.awt.Color(0, 0, 204));
        tblDanhSach.setShowHorizontalLines(false);
        tblDanhSach.setShowVerticalLines(false);
        tblDanhSach.getTableHeader().setReorderingAllowed(false);
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        scrTable.setViewportView(tblDanhSach);
        if (tblDanhSach.getColumnModel().getColumnCount() > 0) {
            tblDanhSach.getColumnModel().getColumn(0).setMinWidth(50);
            tblDanhSach.getColumnModel().getColumn(0).setMaxWidth(50);
            tblDanhSach.getColumnModel().getColumn(1).setResizable(false);
            tblDanhSach.getColumnModel().getColumn(2).setResizable(false);
            tblDanhSach.getColumnModel().getColumn(3).setResizable(false);
            tblDanhSach.getColumnModel().getColumn(4).setMinWidth(100);
            tblDanhSach.getColumnModel().getColumn(4).setMaxWidth(100);
            tblDanhSach.getColumnModel().getColumn(5).setResizable(false);
            tblDanhSach.getColumnModel().getColumn(6).setMinWidth(100);
            tblDanhSach.getColumnModel().getColumn(6).setMaxWidth(100);
            tblDanhSach.getColumnModel().getColumn(7).setMinWidth(100);
            tblDanhSach.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        add(scrTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 1000, 260));

        pnlAccount.setBackground(new java.awt.Color(204, 204, 255));
        pnlAccount.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đăng nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlAccount.setForeground(new java.awt.Color(255, 255, 255));
        pnlAccount.setOpaque(false);
        pnlAccount.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");
        pnlAccount.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        txtUsername.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(102, 0, 0));
        pnlAccount.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 220, 30));

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");
        pnlAccount.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, 30));

        txtPass.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        txtPass.setForeground(new java.awt.Color(102, 0, 0));
        pnlAccount.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 220, 30));

        add(pnlAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 720, 80));

        pnlThongtin.setBackground(new java.awt.Color(204, 204, 255));
        pnlThongtin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin người dùng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 3, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlThongtin.setForeground(new java.awt.Color(204, 255, 255));
        pnlThongtin.setOpaque(false);
        pnlThongtin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHoten.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHoten.setForeground(new java.awt.Color(255, 255, 255));
        lblHoten.setText("Họ tên");
        pnlThongtin.add(lblHoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        txtHoTen.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        txtHoTen.setForeground(new java.awt.Color(102, 0, 0));
        pnlThongtin.add(txtHoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 220, 30));

        lblDienthoai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDienthoai.setForeground(new java.awt.Color(255, 255, 255));
        lblDienthoai.setText("Điện thoại");
        pnlThongtin.add(lblDienthoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, 30));

        txtDienThoai.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        txtDienThoai.setForeground(new java.awt.Color(102, 0, 0));
        pnlThongtin.add(txtDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 220, 30));

        lblNgaySinh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNgaySinh.setForeground(new java.awt.Color(255, 255, 255));
        lblNgaySinh.setText("Ngày sinh");
        pnlThongtin.add(lblNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 30));

        txtNgaySinh.setForeground(new java.awt.Color(102, 0, 0));
        txtNgaySinh.setDateFormatString("dd/MM/yyyy");
        txtNgaySinh.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        pnlThongtin.add(txtNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 220, 30));

        lblCMND.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCMND.setForeground(new java.awt.Color(255, 255, 255));
        lblCMND.setText("CMND");
        pnlThongtin.add(lblCMND, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, -1, 30));

        txtCMND.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        txtCMND.setForeground(new java.awt.Color(102, 0, 0));
        pnlThongtin.add(txtCMND, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 220, 30));

        lblGioitinh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGioitinh.setForeground(new java.awt.Color(255, 255, 255));
        lblGioitinh.setText("Giới tính");
        pnlThongtin.add(lblGioitinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, 30));

        rdoNam.setBackground(new java.awt.Color(0, 0, 0));
        groupGioitinh.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        rdoNam.setForeground(new java.awt.Color(255, 255, 255));
        rdoNam.setText("Nam");
        pnlThongtin.add(rdoNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, 30));

        rdoNu.setBackground(new java.awt.Color(0, 0, 0));
        groupGioitinh.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        rdoNu.setForeground(new java.awt.Color(255, 255, 255));
        rdoNu.setText("Nữ");
        pnlThongtin.add(rdoNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, 30));

        lblVaitro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblVaitro.setForeground(new java.awt.Color(255, 255, 255));
        lblVaitro.setText("Vai trò");
        pnlThongtin.add(lblVaitro, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, 30));

        cboRole.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        pnlThongtin.add(cboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 220, 30));

        lblTrangthai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTrangthai.setForeground(new java.awt.Color(255, 255, 255));
        lblTrangthai.setText("Trạng thái");
        pnlThongtin.add(lblTrangthai, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 30));

        rdoNghiviec.setBackground(new java.awt.Color(0, 0, 0));
        groupTrangthai.add(rdoNghiviec);
        rdoNghiviec.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        rdoNghiviec.setForeground(new java.awt.Color(255, 255, 255));
        rdoNghiviec.setText("Nghỉ việc");
        pnlThongtin.add(rdoNghiviec, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, 30));

        rdoActive.setBackground(new java.awt.Color(0, 0, 0));
        groupTrangthai.add(rdoActive);
        rdoActive.setFont(new java.awt.Font("Cambria", 1, 15)); // NOI18N
        rdoActive.setForeground(new java.awt.Color(255, 255, 255));
        rdoActive.setText("Active");
        pnlThongtin.add(rdoActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, -1, 30));

        add(pnlThongtin, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 720, 190));

        pnlButtons.setMaximumSize(new java.awt.Dimension(400, 60));
        pnlButtons.setMinimumSize(new java.awt.Dimension(400, 60));
        pnlButtons.setOpaque(false);
        pnlButtons.setPreferredSize(new java.awt.Dimension(400, 60));
        pnlButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        lblNhapMoi.setBackground(new java.awt.Color(0, 0, 0));
        lblNhapMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNhapMoi.setForeground(new java.awt.Color(255, 255, 255));
        lblNhapMoi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNhapMoi.setText("NHẬP MỚI");
        lblNhapMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNhapMoi.setOpaque(true);
        lblNhapMoi.setPreferredSize(new java.awt.Dimension(120, 40));
        lblNhapMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNhapMoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNhapMoiMouseExited(evt);
            }
        });
        pnlButtons.add(lblNhapMoi);

        lblThem.setBackground(new java.awt.Color(0, 0, 0));
        lblThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThem.setForeground(new java.awt.Color(255, 255, 255));
        lblThem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThem.setText("THÊM");
        lblThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblThem.setOpaque(true);
        lblThem.setPreferredSize(new java.awt.Dimension(120, 40));
        lblThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblThemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblThemMouseExited(evt);
            }
        });
        pnlButtons.add(lblThem);

        add(pnlButtons, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 610, -1, -1));

        pnlSubmenu.setOpaque(false);
        pnlSubmenu.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 5));

        lblQLDV.setBackground(new java.awt.Color(255, 255, 255));
        lblQLDV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQLDV.setForeground(new java.awt.Color(0, 0, 204));
        lblQLDV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLDV.setText("QUẢN LÝ NGƯỜI DÙNG");
        lblQLDV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblQLDV.setMaximumSize(new java.awt.Dimension(190, 20));
        lblQLDV.setMinimumSize(new java.awt.Dimension(190, 20));
        lblQLDV.setOpaque(true);
        lblQLDV.setPreferredSize(new java.awt.Dimension(190, 20));
        pnlSubmenu.add(lblQLDV);

        add(pnlSubmenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void lblNhapMoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNhapMoiMouseEntered
        // TODO add your handling code here:
        lblNhapMoi.setBackground(Color.WHITE);
        lblNhapMoi.setForeground(new Color(0,102,0));
    }//GEN-LAST:event_lblNhapMoiMouseEntered

    private void lblNhapMoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNhapMoiMouseExited
        // TODO add your handling code here:
        lblNhapMoi.setBackground(new Color(0,102,0));
        lblNhapMoi.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblNhapMoiMouseExited

    private void lblThemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemMouseEntered
        // TODO add your handling code here:
        lblThem.setBackground(Color.WHITE);
        lblThem.setForeground(new Color(0,102,0));
    }//GEN-LAST:event_lblThemMouseEntered

    private void lblThemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThemMouseExited
        // TODO add your handling code here:
        lblThem.setBackground(new Color(0,102,0));
        lblThem.setForeground(Color.WHITE);
    }//GEN-LAST:event_lblThemMouseExited
    
    private void customJTable(JTable tbl){
        tbl.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 13));
        tbl.setFont(new Font("Tahoma", Font.PLAIN, 11));
        tbl.getTableHeader().setOpaque(false);
        tbl.getTableHeader().setBackground(new Color(0, 0, 0));
        tbl.getTableHeader().setForeground(new Color(255, 255, 255));
        tbl.setRowHeight(30);
    }
//    private void fillToTable() {
//        DefaultTableModel table = (DefaultTableModel) tblDanhSach.getModel();
//        table.setRowCount(0);
//        //List<Users> list = new UsersDAO().select();
//        for (Users tk : list) {
//            Object[] row = new Object[]{tk.getUsername(), tk.getHoTen(), XuLy.convertDate(tk.getNgaySinh()), tk.isGioiTinh() ? "Nam" : "Nữ", tk.getSoDT(), tk.getCmnd(), tk.isRole() ? "Quản lý" : "Thu ngân"};
//            table.addRow(row);
//        }
//    }

    private void showDetail() throws ParseException {
        txtUsername.setText(tblDanhSach.getValueAt(index, 0) + "");
        txtHoTen.setText(tblDanhSach.getValueAt(index, 1) + "");
        Date dateVN = new SimpleDateFormat("dd/MM/yyyy").parse(tblDanhSach.getValueAt(index, 2) + "");
        txtNgaySinh.setDate(dateVN);
        if (tblDanhSach.getValueAt(index, 3).toString().equals("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtDienThoai.setText(tblDanhSach.getValueAt(index, 4) + "");
        txtCMND.setText(tblDanhSach.getValueAt(index, 5) + "");
        cboRole.setSelectedItem(tblDanhSach.getValueAt(index, 6) + "");
        txtPass.setText("");
        tblDanhSach.scrollRectToVisible(new Rectangle(0, index * tblDanhSach.getRowHeight(), tblDanhSach.getWidth(), tblDanhSach.getRowHeight())); //(Kéo đến vị trí cụ thế)//

    }

    private boolean checkInput() throws SQLException {
        
        if (!txtHoTen.getText().matches("[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ\\s]{1,}")) {
            txtHoTen.requestFocus();
            JDialogHelper.popup("loi", this, "Họ tên chứa kí tự không hợp lệ", "LỖI");
            return false;
        }
        if (!txtDienThoai.getText().matches("\\d{10,12}")) {
            JDialogHelper.popup("loi", this, "Điện thoại không hợp lệ", "LỖI");
            txtDienThoai.requestFocus();
            return false;
        }
        if (txtNgaySinh.getDate() == null) {
            JDialogHelper.popup("loi", this, "Chưa chọn/chưa nhập ngày sinh", "LỖI");
            txtNgaySinh.requestFocus();
            return false;
        }
        if (txtCMND.getText().trim().equals("")) {
            JDialogHelper.popup("loi", this, "Chưa nhập CMND", "LỖI");
            txtCMND.requestFocus();
            return false;
        }
        if (!rdoNam.isSelected() & !rdoNu.isSelected()) {
            JDialogHelper.popup("loi", this, "Chưa chọn Giới tính", "LỖI");
            return false;
        }
        if (cboRole.getSelectedIndex() == -1) {
            JDialogHelper.popup("loi", this, "Chưa chọn Vai trò", "LỖI");
            return false;
        }
        if (txtUsername.getText().trim().equals("")) {
            JDialogHelper.popup("loi", this, "Chưa nhập Username", "LỖI");
            txtUsername.requestFocus();
            return false;
        }

        if (lblThem.getText().equals("Thêm")) { //Kiểm tra tồn tại username và kiểm tra password khi thêm mới User

            rs = JDBCHelper.executeQuery("SELECT * FROM USERS WHERE username = ?", txtUsername.getText());
            if (rs.next()) {
                JDialogHelper.popup("loi", this, "Đã tồn tại username " + txtUsername.getText(), "LỖI");
                txtUsername.requestFocus();
                return false;
            }
        }
        if (lblThem.getText().equals("Cập nhật")) { //Kiểm tra tồn tại username (Loại trường hợp không thay đổi username
            rs = JDBCHelper.executeQuery("SELECT * FROM USERS");
            while (rs.next()) {
                if (rs.getString("username").equals(txtUsername.getText()) && !tblDanhSach.getValueAt(index, 0).toString().equals(txtUsername.getText())) {
                    JDialogHelper.popup("loi", this, "Đã tồn tại username " + txtUsername.getText(), "LỖI");
                    txtUsername.requestFocus();
                    return false;
                }

            }
        }

        return true;

    }

    private void addU() throws SQLException {
        if (checkInput()) {
            Users u = new Users();
            u.setUsername(txtUsername.getText());
            if (txtPass.getText().equals("")) {
                u.setPassword(XuLy.MD5encryption("123"));
            } else {
                u.setPassword(XuLy.MD5encryption(txtPass.getText()));
            }
            u.setHoTen(XuLy.makeupHoTen(txtHoTen.getText()));
            u.setNgaySinh(new SimpleDateFormat("yyyy-MM-dd").format(txtNgaySinh.getDate()));
            u.setSoDT(txtDienThoai.getText());
            if (rdoNam.isSelected()) {
                u.setGioiTinh(true);
            } else {
                u.setGioiTinh(false);
            }
            u.setCmnd(txtCMND.getText());
            if (cboRole.getSelectedItem().equals("Quản lý")) {
                u.setRole(true);
            } else {
                u.setRole(false);
            }
//            new UsersDAO().insert(u);
            JDialogHelper.popup("ok", this, "Thêm User thành công", "THÊM USER");
          //  fillToTable();
            clear();
            tblDanhSach.clearSelection();

        }
    }

    private void editU(String username) throws SQLException {
        if (checkInput()) {
            Users u = new Users();
            u.setUsername(txtUsername.getText());
            if (txtPass.getText().trim().equals("")) {
                rs = JDBCHelper.executeQuery("SELECT * FROM USERS WHERE username = ?", username);
                if (rs.next()) {
                    u.setPassword(rs.getString("matKhau"));
                }
            } else {
                u.setPassword(XuLy.MD5encryption(txtPass.getText()));
            }
            u.setHoTen(XuLy.makeupHoTen(txtHoTen.getText()));
            u.setNgaySinh(new SimpleDateFormat("yyyy-MM-dd").format(txtNgaySinh.getDate()));
            u.setSoDT(txtDienThoai.getText());
            u.setGioiTinh(rdoNam.isSelected());
            u.setCmnd(txtCMND.getText());
            if (cboRole.getSelectedItem().equals("Quản lý")) {
                u.setRole(true);
            } else {
                u.setRole(false);
            }
//            new UsersDAO().update(u, username);
            JDialogHelper.popup("ok", this, "Cập nhật thông tin User thành công", "CẬP NHẬT USER");
         //   fillToTable();
            clear();
            tblDanhSach.clearSelection();

        }
    }

    private void deleteU(String username) {
        if (JDialogHelper.ask(this, "Bạn có chắc chắn xóa User " + username + "?", "XÓA USER") == 0) {
//            new UsersDAO().delete(username);
            JDialogHelper.popup("ok", this, "Đã xóa User thành công", "XÓA USER");

        } else {

        }
    }

    private void clear() {
        index = -1;
        tblDanhSach.clearSelection();
        txtCMND.setText("");
        txtDienThoai.setText("");
        txtHoTen.setText("");
        txtNgaySinh.setDate(null);
        txtPass.setText("");
        txtUsername.setText("");
        rdoNam.setSelected(false);
        rdoNu.setSelected(false);
        cboRole.setSelectedIndex(-1);
        lblThem.setText("Thêm");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboRole;
    private javax.swing.ButtonGroup groupGioitinh;
    private javax.swing.ButtonGroup groupTrangthai;
    private javax.swing.JLabel lblCMND;
    private javax.swing.JLabel lblDienthoai;
    private javax.swing.JLabel lblGioitinh;
    private javax.swing.JLabel lblHoten;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblNhapMoi;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblQLDV;
    private javax.swing.JLabel lblThem;
    private javax.swing.JLabel lblTrangthai;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblVaitro;
    private javax.swing.JPanel pnlAccount;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlSubmenu;
    private javax.swing.JPanel pnlThongtin;
    private javax.swing.JRadioButton rdoActive;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNghiviec;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JScrollPane scrTable;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtHoTen;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
